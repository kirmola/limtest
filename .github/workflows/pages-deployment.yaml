on:
  push:
    branches:
      - main

jobs:
  divide_and_upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Divide and Upload Assets

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Divide and Move Assets
        run: |
          total_files=$(ls -1 data | wc -l)
          files_per_directory=19999
          remaining_files=$total_files

          i=1
          while [ $remaining_files -gt 0 ]; do
            current_directory="assets_part$i"
            mkdir -p "$current_directory"

            files_to_move=$(ls -1 data | head -n $files_per_directory)
            if [ "$files_to_move" != "" ]; then
              echo "$files_to_move" | xargs -I {} mv "data/{}" "$current_directory/"
            fi

            remaining_files=$((remaining_files - files_per_directory))
            i=$((i + 1))
          done

      - name: Upload Parts
        run: |
          for dir in assets_part*; do
            if [ -d "$dir" ]; then
              echo "Uploading assets from $dir to Cloudflare Pages..."
              # Use cloudflare/pages-action or your upload script here
            fi
          done
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: limtest
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_part1:
    runs-on: ubuntu-latest
    needs: divide_and_upload
    permissions:
      contents: read
      deployments: write
    name: Upload Part 1

    steps:
      - name: Upload Part 1
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: limtest
          directory: assets_part1
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  upload_part2:
    runs-on: ubuntu-latest
    needs: divide_and_upload
    permissions:
      contents: read
      deployments: write
    name: Upload Part 2

    steps:
      - name: Upload Part 2
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: limtest
          directory: assets_part2
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

# Add more upload_part jobs for additional parts if needed
